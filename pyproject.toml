[build-system]
requires = ["uv_build>=0.9.4,<0.10.0"]
build-backend = "uv_build"

[project]
authors = [
  { name = "Paul Rademacher", email = "paul.g.rademacher.civ@us.navy.mil" },
]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = ["numpy"]
description = "A template for Python project layout and configuration"
name = "Python-project"
readme = "README.md"
requires-python = ">=3.13"
version = "0.0.1"

[project.optional-dependencies]
plot = ["matplotlib", "PyQt5"]

[project.urls]
"Bug Tracker" = "https://github.com/rademacher-p/Python-project/issues"
"Homepage" = "https://github.com/rademacher-p/Python-project"

[dependency-groups]
dev = [
  "ipython",
  "pre-commit",
  { include-group = "lint" },
  { include-group = "test" },
  { include-group = "typing" },
]
lint = ["ruff", "mypy"]
test = ["pytest", "pytest-cov", "pytest-xdist"]
typing = []
docs = ["Sphinx", "furo", "sphinx-book-theme"]

# [tool.hatch.envs.dev.scripts]
# sphinx_html = "sphinx-build -M html docs/source/ docs/build/"
# sphinx_api = "sphinx-apidoc -f -o docs/source src/mlx"

[tool.ruff]
src = ["src", "tests", "examples"]
# extend-exclude = ["src/_deprecated"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
  "F",   # pyflakes
  "E",   # pycodestyle
  "W",   # pycodestyle
  "C90", # mccabe
  "I",   # isort
  "N",   # pep8-naming
  "D",   # pydocstyle
  "B",   # bugbear
  "UP",  # pyupgrade
  "NPY", # NumPy
]
ignore = [
  "D1",   # missing docstrings
  "B905", # zip w/o explicit `strict=`
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

# [tool.mypy]
# exclude = ["tmp/", "_deprecated/"]
# explicit_package_bases = true

[[tool.mypy.overrides]]
module = ["python_project.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = [
  "--import-mode=importlib",
  "--cov=src/python_project",
  "--cov-report=term",
  "--cov-report=xml:tests/coverage.xml",
  # "--numprocesses=auto",
]
filterwarnings = ["ignore::DeprecationWarning:python_project.*"]

[tool.coverage.run]
data_file = "tests/.coverage"
