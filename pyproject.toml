[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
authors = [{ name = "Paul Rademacher", email = "paul.g.rademacher.civ@us.navy.mil" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = ["numpy"]
description = "A template for Python project layout and configuration"
name = "Python-project"
readme = "README.md"
requires-python = ">=3.11"
version = "0.0.1"

[project.optional-dependencies]
dev = [
  "ipython",
  "black",
  "ruff",
  "mypy",
  "pre-commit",
  "hatch",
  "pytest",
  "pytest-cov",
  "pytest-xdist",
]
typing = []  # TODO: per extras set?
docs = ["Sphinx", "furo"]
extras = [
  "ipykernel",
  "tensorboard",
  "torch-tb-profiler",
  "PyQt6",
  "PyYAML",
  "tqdm",
]

[project.urls]
"Bug Tracker" = "https://github.com/rademacher-p/Python-project/issues"
"Homepage" = "https://github.com/rademacher-p/Python-project"

# [tool.hatch.metadata]
# allow-direct-references = true

[tool.hatch.build]
packages = ["src/python_project"]

# [tool.hatch.build.targets.wheel]
# bypass-selection = true

[tool.hatch.envs.default]
python = "3.11"
pre-install-commands = ["pip install --upgrade pip"]

[tool.hatch.envs.dev]
features = ["dev"]
post-install-commands = [
  "pre-commit install",
  "mypy --install-types --non-interactive . || true",
]

[tool.hatch.envs.docs]
features = ["docs"]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -M html docs/source/ docs/build/"

# [tool.hatch.envs.default.env-vars]
# PIP_EXTRA_INDEX_URL = "https://download.pytorch.org/whl/cu118"

# [tool.black]
# extend-exclude = "(_deprecated|src/_deprecated)/.*\\.py"

[tool.ruff]
src = ["src"]
select = [
  "F",   # pyflakes
  "E",   # pycodestyle
  "W",   # pycodestyle
  "C90", # mccabe
  "I",   # isort
  "N",   # pep8-naming
  "D",   # pydocstyle
  "B",   # bugbear
  "UP",  # pyupgrade
]
ignore = [
  "D1",   # missing docstrings
  "B905", # zip w/o explicit `strict=`
]
# extend-exclude = ["src/_deprecated"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
# exclude = ["src/_deprecated"]
# explicit_package_bases = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = ["python_project.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = [
  "--import-mode=importlib",
  "--cov=src/python_project",
  "--cov-report=term",
  "--cov-report=xml:tests/coverage.xml",
  "--numprocesses=auto",
]
# filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
data_file = "tests/.coverage"
